# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  schedule:
    - cron: '10 18 * * 4'
  push:
    paths:
      - 'R/*.R'
      - 'vignettes/*.Rmd'
      - '.github/workflows/*.yml'
    branches:
      - master
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          #- {os: windows-latest, r: 'release'}
          #- {os: windows-latest, r: 'oldrel'}
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'devel'}
          - {os: macOS-latest, r: 'release'}
            #- {os: macOS-latest, r: 'oldrel'}
          - {os: ubuntu-20.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: ubuntu-20.04, r: 'devel', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
            #- {os: ubuntu-20.04, r: 'oldrel', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
            #- {os: macOS-latest, r: '3.4.0'}
            #- {os: ubuntu-20.04, r: '3.4.1', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
            #- {os: macOS-latest, r: '3.4.2'}
            #- {os: macOS-latest, r: '3.4.3'}
            #- {os: macOS-latest, r: '3.4.4'}
            #- {os: macOS-latest, r: '3.5.0'}
            #- {os: ubuntu-20.04, r: '3.5.1', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
            #- {os: macOS-latest, r: '3.5.2'}
            #- {os: macOS-latest, r: '3.5.3'}
            #- {os: macOS-latest, r: '3.6.0'}
            #- {os: ubuntu-20.04, r: '3.6.1', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
            #- {os: windows-latest, r: '3.6.2'}
          #- {os: macOS-latest, r: '3.6.3'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-tinytex@v2
      - name: Query dependencies
        run: |
          install.packages(c('remotes', 'BiocManager'))
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')
      - name: R version
        run: |
          sprintf('%s', R.Version()$version.string)
          sprintf('R v%s.%s', R.Version()$major, R.Version()$minor)
          for (ix in names(R.Version())) { cat(sprintf("%s: %s\n", ix, R.Version()[[ix]])) }
        shell: Rscript {0}

      - name: Install dependencies
        run: |
          BiocManager::install(remotes::local_package_deps(dependencies = TRUE))
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}
      #- name: setup-r-dep
      #  uses: r-lib/actions/setup-r-dependencies@v2
      #  env:
      #    _R_CHECK_FORCE_SUGGESTS_: false
      - name: R and Bioconductor versions
        run: |
          sprintf('%s', R.Version()$version.string)
          sprintf('R v%s.%s', R.Version()$major, R.Version()$minor)
          sprintf('Bioconductor: %s', BiocManager::version())
        shell: Rscript {0}
      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
          _R_LOOSE_ROCK_FORCE_CODING_GENES_TEST: TRUE
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
